name: deploy-aws-ota

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build
        uses: test-on-avh/build
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download AVH image
        uses: actions/download-artifact@master
        with:
          name: OTA_MQTT_Update_Demo.Debug_B-U585I-IOT02A_signed.bin
          path: ${{ github.workspace }}/out/
      - name: Deploy OTA AWS job
        run: |
          aws s3 cp out/OTA_MQTT_Update_Demo.Debug_B-U585I-IOT02A_signed.bin s3://${{ secrets.OTA_S3_BUCKET }}/
          export OTA_S3_VERSION=$(aws s3api  list-object-versions --bucket ${{ secrets.OTA_S3_BUCKET }} --prefix OTA_MQTT_Update_Demo.Debug_B-U585I-IOT02A_signed.bin | grep VersionId | head -n1 | cut -d':' -f2 | cut -d\" -f2)
          export OTA_UPDATE_ID=DevSummit22-Demo-$(date +%s)
          envsubst < avh/scripts/ota-update-job.tmpl > ota-job.json
          aws iot create-ota-update --cli-input-json file://ota-job.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "eu-west-1"
          OTA_TARGET: ${{ secrets.OTA_TARGET }}
          OTA_S3_BUCKET: ${{ secrets.OTA_S3_BUCKET }}
          OTA_SIGNING_PROFILE: ${{ secrets.OTA_SIGNING_PROFILE }}
          OTA_ROLE_ARN: ${{ secrets.OTA_ROLE_ARN }}